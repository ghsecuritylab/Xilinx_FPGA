-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_realfft_be_descramble_proc87 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    real_spectrum_lo_V_M_real_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_lo_V_M_real_V_full_n : IN STD_LOGIC;
    real_spectrum_lo_V_M_real_V_write : OUT STD_LOGIC;
    real_spectrum_lo_V_M_imag_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_lo_V_M_imag_V_full_n : IN STD_LOGIC;
    real_spectrum_lo_V_M_imag_V_write : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_i_0_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    real_spectrum_hi_buf_i_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_spectrum_hi_buf_i_1_ce0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_1_we0 : OUT STD_LOGIC;
    real_spectrum_hi_buf_i_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_real_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_real_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_real_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_1_M_imag_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_1_M_imag_V_ce1 : OUT STD_LOGIC;
    descramble_buf_1_M_imag_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_real_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_real_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_real_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    descramble_buf_0_M_imag_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    descramble_buf_0_M_imag_V_ce0 : OUT STD_LOGIC;
    descramble_buf_0_M_imag_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of Loop_realfft_be_descramble_proc87 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal twid_rom_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal twid_rom_0_ce0 : STD_LOGIC;
    signal twid_rom_0_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal twid_rom_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal twid_rom_1_ce0 : STD_LOGIC;
    signal twid_rom_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal real_spectrum_lo_V_M_real_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter9_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal real_spectrum_lo_V_M_imag_V_blk_n : STD_LOGIC;
    signal i2_0_i_reg_236 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal exitcond1301_i_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal real_spectrum_lo_V_M_real_V1_status : STD_LOGIC;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter8_exitcond1301_i_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_289_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_2_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter6_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter7_tmp_2_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_325_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter1_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_tmp_32_reg_923 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter7_p_Val2_s_reg_928 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter4_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter7_p_Val2_1_reg_935 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_3_reg_942 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_reg_pp0_iter2_p_Val2_3_reg_942 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_3_reg_942 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_2_reg_947 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_16_reg_952 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_16_reg_952 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_16_reg_952 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_17_reg_957 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_17_reg_957 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_17_reg_957 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_334_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_reg_962 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_338_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_reg_967 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_5_fu_341_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_5_reg_972 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_reg_977 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_987 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_992 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_real_V_read_assign_fu_427_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_real_V_read_assign_reg_997 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1007 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1012 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_fu_500_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_imag_V_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter5_f_M_imag_V_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_f_M_imag_V_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter7_f_M_imag_V_reg_1017 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_1023 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_1033 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP1_V_i_cast_i_fu_540_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal OP1_V_i_cast_i_reg_1038 : STD_LOGIC_VECTOR (30 downto 0);
    signal OP2_V_i_cast_i_fu_543_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i_fu_546_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_i_reg_1050 : STD_LOGIC_VECTOR (30 downto 0);
    signal f_M_real_V_fu_554_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_M_real_V_reg_1056 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter6_f_M_real_V_reg_1056 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_pp0_iter7_f_M_real_V_reg_1056 : STD_LOGIC_VECTOR (15 downto 0);
    signal OP2_V_1_i_cast_i_fu_571_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_844_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_8_reg_1068 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_850_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_i_cast_i_reg_1073 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_11_reg_1078 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_13_reg_1084 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_real_V_1_fu_593_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_1_fu_597_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_real_V_1_fu_601_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata2_M_imag_V_1_fu_605_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_real_V_fu_609_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal cdata1_M_imag_V_fu_613_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal tmp_22_reg_1130 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1135 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_26_fu_667_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_reg_1140 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_reg_1145 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1150 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_31_fu_707_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_reg_1155 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_reg_1160 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1165 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_38_fu_747_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_reg_1170 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_reg_1175 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1180 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_44_fu_787_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_reg_1185 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_7_reg_247 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_6_reg_256 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_5_reg_265 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter4_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter5_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter6_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter7_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter8_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter9_t_V_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex3_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal real_spectrum_lo_V_M_real_V1_update : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_309_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal newIndex2_fu_313_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_fu_329_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_1_fu_357_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_tr_fu_361_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg2_fu_373_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal t_V_2_fu_399_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_412_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_417_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_438_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_7_fu_435_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_441_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_2_fu_451_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_tr_fu_447_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg1_fu_469_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_fu_495_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_tr_fu_457_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_neg_fu_514_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_fu_549_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_560_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_y_M_imag_V_read_assign_fu_565_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_856_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_863_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_37_tr_fu_629_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg3_fu_641_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_23_fu_647_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_tr_fu_625_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg4_fu_681_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_fu_687_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_tr_fu_621_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg5_fu_721_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_35_fu_727_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_tr_fu_617_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg6_fu_761_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_fu_767_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_793_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_803_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_cast_fu_813_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_824_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_834_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_844_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_844_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_850_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_856_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_856_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_863_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_863_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_844_ce : STD_LOGIC;
    signal grp_fu_850_ce : STD_LOGIC;
    signal grp_fu_856_ce : STD_LOGIC;
    signal grp_fu_863_ce : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_844_p00 : STD_LOGIC_VECTOR (30 downto 0);

    component hls_xfft2real_muldEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_muleOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_macfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component hls_xfft2real_macg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Loop_realfft_be_dbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component Loop_realfft_be_dcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    twid_rom_0_U : component Loop_realfft_be_dbkb
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_0_address0,
        ce0 => twid_rom_0_ce0,
        q0 => twid_rom_0_q0);

    twid_rom_1_U : component Loop_realfft_be_dcud
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => twid_rom_1_address0,
        ce0 => twid_rom_1_ce0,
        q0 => twid_rom_1_q0);

    hls_xfft2real_muldEe_U7 : component hls_xfft2real_muldEe
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_844_p0,
        din1 => grp_fu_844_p1,
        ce => grp_fu_844_ce,
        dout => grp_fu_844_p2);

    hls_xfft2real_muleOg_U8 : component hls_xfft2real_muleOg
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_850_p0,
        din1 => ap_reg_pp0_iter3_p_Val2_17_reg_957,
        ce => grp_fu_850_ce,
        dout => grp_fu_850_p2);

    hls_xfft2real_macfYi_U9 : component hls_xfft2real_macfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_856_p0,
        din1 => grp_fu_856_p1,
        din2 => p_Val2_8_reg_1068,
        ce => grp_fu_856_ce,
        dout => grp_fu_856_p3);

    hls_xfft2real_macg8j_U10 : component hls_xfft2real_macg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 15,
        din1_WIDTH => 16,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_863_p0,
        din1 => grp_fu_863_p1,
        din2 => tmp_1_i_cast_i_reg_1073,
        ce => grp_fu_863_ce,
        dout => grp_fu_863_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter9_t_V_4_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_4_reg_274 <= cdata1_M_real_V_1_fu_593_p2;
                elsif (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_1) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_4_reg_274 <= cdata1_M_real_V_fu_609_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_t_V_4_reg_274 <= ap_phi_reg_pp0_iter8_t_V_4_reg_274;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_t_V_5_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_5_reg_265 <= cdata1_M_imag_V_1_fu_597_p2;
                elsif (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_1) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_5_reg_265 <= cdata1_M_imag_V_fu_613_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_t_V_5_reg_265 <= ap_phi_reg_pp0_iter8_t_V_5_reg_265;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_t_V_6_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_6_reg_256 <= cdata2_M_real_V_1_fu_601_p2;
                elsif (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_1) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_6_reg_256 <= descramble_buf_1_M_real_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_t_V_6_reg_256 <= ap_phi_reg_pp0_iter8_t_V_6_reg_256;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_t_V_7_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_7_reg_247 <= cdata2_M_imag_V_1_fu_605_p2;
                elsif (((ap_reg_pp0_iter7_tmp_2_reg_899 = ap_const_lv1_1) and (ap_reg_pp0_iter7_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter9_t_V_7_reg_247 <= descramble_buf_1_M_imag_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_t_V_7_reg_247 <= ap_phi_reg_pp0_iter8_t_V_7_reg_247;
                end if;
            end if; 
        end if;
    end process;

    i2_0_i_reg_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i2_0_i_reg_236 <= ap_const_lv9_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond1301_i_fu_283_p2 = ap_const_lv1_0))) then 
                i2_0_i_reg_236 <= i_fu_289_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter3_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter3_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                    OP1_V_i_cast_i_reg_1038(14 downto 0) <= OP1_V_i_cast_i_fu_540_p1(14 downto 0);
                f_M_imag_V_reg_1017 <= f_M_imag_V_fu_500_p3;
                tmp_18_reg_1023 <= r_V_2_fu_451_p2(16 downto 16);
                tmp_19_reg_1028 <= p_neg_fu_514_p2(16 downto 1);
                tmp_20_reg_1033 <= r_V_2_fu_451_p2(16 downto 1);
                tmp_4_reg_1007 <= p_neg1_fu_469_p2(16 downto 1);
                tmp_5_reg_1012 <= r_V_fu_441_p2(16 downto 1);
                tmp_9_reg_1002 <= r_V_fu_441_p2(16 downto 16);
                tmp_i_reg_1050 <= tmp_i_fu_546_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_t_V_4_reg_274 <= ap_phi_reg_pp0_iter0_t_V_4_reg_274;
                ap_phi_reg_pp0_iter1_t_V_5_reg_265 <= ap_phi_reg_pp0_iter0_t_V_5_reg_265;
                ap_phi_reg_pp0_iter1_t_V_6_reg_256 <= ap_phi_reg_pp0_iter0_t_V_6_reg_256;
                ap_phi_reg_pp0_iter1_t_V_7_reg_247 <= ap_phi_reg_pp0_iter0_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_t_V_4_reg_274 <= ap_phi_reg_pp0_iter1_t_V_4_reg_274;
                ap_phi_reg_pp0_iter2_t_V_5_reg_265 <= ap_phi_reg_pp0_iter1_t_V_5_reg_265;
                ap_phi_reg_pp0_iter2_t_V_6_reg_256 <= ap_phi_reg_pp0_iter1_t_V_6_reg_256;
                ap_phi_reg_pp0_iter2_t_V_7_reg_247 <= ap_phi_reg_pp0_iter1_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_t_V_4_reg_274 <= ap_phi_reg_pp0_iter2_t_V_4_reg_274;
                ap_phi_reg_pp0_iter3_t_V_5_reg_265 <= ap_phi_reg_pp0_iter2_t_V_5_reg_265;
                ap_phi_reg_pp0_iter3_t_V_6_reg_256 <= ap_phi_reg_pp0_iter2_t_V_6_reg_256;
                ap_phi_reg_pp0_iter3_t_V_7_reg_247 <= ap_phi_reg_pp0_iter2_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_t_V_4_reg_274 <= ap_phi_reg_pp0_iter3_t_V_4_reg_274;
                ap_phi_reg_pp0_iter4_t_V_5_reg_265 <= ap_phi_reg_pp0_iter3_t_V_5_reg_265;
                ap_phi_reg_pp0_iter4_t_V_6_reg_256 <= ap_phi_reg_pp0_iter3_t_V_6_reg_256;
                ap_phi_reg_pp0_iter4_t_V_7_reg_247 <= ap_phi_reg_pp0_iter3_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_t_V_4_reg_274 <= ap_phi_reg_pp0_iter4_t_V_4_reg_274;
                ap_phi_reg_pp0_iter5_t_V_5_reg_265 <= ap_phi_reg_pp0_iter4_t_V_5_reg_265;
                ap_phi_reg_pp0_iter5_t_V_6_reg_256 <= ap_phi_reg_pp0_iter4_t_V_6_reg_256;
                ap_phi_reg_pp0_iter5_t_V_7_reg_247 <= ap_phi_reg_pp0_iter4_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_t_V_4_reg_274 <= ap_phi_reg_pp0_iter5_t_V_4_reg_274;
                ap_phi_reg_pp0_iter6_t_V_5_reg_265 <= ap_phi_reg_pp0_iter5_t_V_5_reg_265;
                ap_phi_reg_pp0_iter6_t_V_6_reg_256 <= ap_phi_reg_pp0_iter5_t_V_6_reg_256;
                ap_phi_reg_pp0_iter6_t_V_7_reg_247 <= ap_phi_reg_pp0_iter5_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_t_V_4_reg_274 <= ap_phi_reg_pp0_iter6_t_V_4_reg_274;
                ap_phi_reg_pp0_iter7_t_V_5_reg_265 <= ap_phi_reg_pp0_iter6_t_V_5_reg_265;
                ap_phi_reg_pp0_iter7_t_V_6_reg_256 <= ap_phi_reg_pp0_iter6_t_V_6_reg_256;
                ap_phi_reg_pp0_iter7_t_V_7_reg_247 <= ap_phi_reg_pp0_iter6_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_t_V_4_reg_274 <= ap_phi_reg_pp0_iter7_t_V_4_reg_274;
                ap_phi_reg_pp0_iter8_t_V_5_reg_265 <= ap_phi_reg_pp0_iter7_t_V_5_reg_265;
                ap_phi_reg_pp0_iter8_t_V_6_reg_256 <= ap_phi_reg_pp0_iter7_t_V_6_reg_256;
                ap_phi_reg_pp0_iter8_t_V_7_reg_247 <= ap_phi_reg_pp0_iter7_t_V_7_reg_247;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_exitcond1301_i_reg_880 <= exitcond1301_i_reg_880;
                ap_reg_pp0_iter1_tmp_2_reg_899 <= tmp_2_reg_899;
                ap_reg_pp0_iter1_tmp_32_reg_923 <= tmp_32_reg_923;
                exitcond1301_i_reg_880 <= exitcond1301_i_fu_283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond1301_i_reg_880 <= ap_reg_pp0_iter1_exitcond1301_i_reg_880;
                ap_reg_pp0_iter2_p_Val2_16_reg_952 <= p_Val2_16_reg_952;
                ap_reg_pp0_iter2_p_Val2_17_reg_957 <= p_Val2_17_reg_957;
                ap_reg_pp0_iter2_p_Val2_1_reg_935 <= p_Val2_1_reg_935;
                ap_reg_pp0_iter2_p_Val2_3_reg_942 <= p_Val2_3_reg_942;
                ap_reg_pp0_iter2_p_Val2_s_reg_928 <= p_Val2_s_reg_928;
                ap_reg_pp0_iter2_tmp_2_reg_899 <= ap_reg_pp0_iter1_tmp_2_reg_899;
                ap_reg_pp0_iter2_tmp_32_reg_923 <= ap_reg_pp0_iter1_tmp_32_reg_923;
                ap_reg_pp0_iter3_exitcond1301_i_reg_880 <= ap_reg_pp0_iter2_exitcond1301_i_reg_880;
                ap_reg_pp0_iter3_p_Val2_16_reg_952 <= ap_reg_pp0_iter2_p_Val2_16_reg_952;
                ap_reg_pp0_iter3_p_Val2_17_reg_957 <= ap_reg_pp0_iter2_p_Val2_17_reg_957;
                ap_reg_pp0_iter3_p_Val2_1_reg_935 <= ap_reg_pp0_iter2_p_Val2_1_reg_935;
                ap_reg_pp0_iter3_p_Val2_3_reg_942 <= ap_reg_pp0_iter2_p_Val2_3_reg_942;
                ap_reg_pp0_iter3_p_Val2_s_reg_928 <= ap_reg_pp0_iter2_p_Val2_s_reg_928;
                ap_reg_pp0_iter3_tmp_2_reg_899 <= ap_reg_pp0_iter2_tmp_2_reg_899;
                ap_reg_pp0_iter3_tmp_32_reg_923 <= ap_reg_pp0_iter2_tmp_32_reg_923;
                ap_reg_pp0_iter4_exitcond1301_i_reg_880 <= ap_reg_pp0_iter3_exitcond1301_i_reg_880;
                ap_reg_pp0_iter4_p_Val2_1_reg_935 <= ap_reg_pp0_iter3_p_Val2_1_reg_935;
                ap_reg_pp0_iter4_p_Val2_s_reg_928 <= ap_reg_pp0_iter3_p_Val2_s_reg_928;
                ap_reg_pp0_iter4_tmp_2_reg_899 <= ap_reg_pp0_iter3_tmp_2_reg_899;
                ap_reg_pp0_iter4_tmp_32_reg_923 <= ap_reg_pp0_iter3_tmp_32_reg_923;
                ap_reg_pp0_iter5_exitcond1301_i_reg_880 <= ap_reg_pp0_iter4_exitcond1301_i_reg_880;
                ap_reg_pp0_iter5_f_M_imag_V_reg_1017 <= f_M_imag_V_reg_1017;
                ap_reg_pp0_iter5_p_Val2_1_reg_935 <= ap_reg_pp0_iter4_p_Val2_1_reg_935;
                ap_reg_pp0_iter5_p_Val2_s_reg_928 <= ap_reg_pp0_iter4_p_Val2_s_reg_928;
                ap_reg_pp0_iter5_tmp_2_reg_899 <= ap_reg_pp0_iter4_tmp_2_reg_899;
                ap_reg_pp0_iter5_tmp_32_reg_923 <= ap_reg_pp0_iter4_tmp_32_reg_923;
                ap_reg_pp0_iter6_exitcond1301_i_reg_880 <= ap_reg_pp0_iter5_exitcond1301_i_reg_880;
                ap_reg_pp0_iter6_f_M_imag_V_reg_1017 <= ap_reg_pp0_iter5_f_M_imag_V_reg_1017;
                ap_reg_pp0_iter6_f_M_real_V_reg_1056 <= f_M_real_V_reg_1056;
                ap_reg_pp0_iter6_p_Val2_1_reg_935 <= ap_reg_pp0_iter5_p_Val2_1_reg_935;
                ap_reg_pp0_iter6_p_Val2_s_reg_928 <= ap_reg_pp0_iter5_p_Val2_s_reg_928;
                ap_reg_pp0_iter6_tmp_2_reg_899 <= ap_reg_pp0_iter5_tmp_2_reg_899;
                ap_reg_pp0_iter6_tmp_32_reg_923 <= ap_reg_pp0_iter5_tmp_32_reg_923;
                ap_reg_pp0_iter7_exitcond1301_i_reg_880 <= ap_reg_pp0_iter6_exitcond1301_i_reg_880;
                ap_reg_pp0_iter7_f_M_imag_V_reg_1017 <= ap_reg_pp0_iter6_f_M_imag_V_reg_1017;
                ap_reg_pp0_iter7_f_M_real_V_reg_1056 <= ap_reg_pp0_iter6_f_M_real_V_reg_1056;
                ap_reg_pp0_iter7_p_Val2_1_reg_935 <= ap_reg_pp0_iter6_p_Val2_1_reg_935;
                ap_reg_pp0_iter7_p_Val2_s_reg_928 <= ap_reg_pp0_iter6_p_Val2_s_reg_928;
                ap_reg_pp0_iter7_tmp_2_reg_899 <= ap_reg_pp0_iter6_tmp_2_reg_899;
                ap_reg_pp0_iter7_tmp_32_reg_923 <= ap_reg_pp0_iter6_tmp_32_reg_923;
                ap_reg_pp0_iter8_exitcond1301_i_reg_880 <= ap_reg_pp0_iter7_exitcond1301_i_reg_880;
                ap_reg_pp0_iter8_tmp_32_reg_923 <= ap_reg_pp0_iter7_tmp_32_reg_923;
                ap_reg_pp0_iter9_exitcond1301_i_reg_880 <= ap_reg_pp0_iter8_exitcond1301_i_reg_880;
                ap_reg_pp0_iter9_tmp_32_reg_923 <= ap_reg_pp0_iter8_tmp_32_reg_923;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter4_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter4_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                f_M_real_V_reg_1056 <= f_M_real_V_fu_554_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter6_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter6_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_11_reg_1078 <= grp_fu_856_p3(30 downto 15);
                p_Val2_13_reg_1084 <= grp_fu_863_p3(30 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_2_reg_899 = ap_const_lv1_0) and (exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_16_reg_952 <= twid_rom_0_q0;
                p_Val2_17_reg_957 <= twid_rom_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_1_reg_935 <= descramble_buf_0_M_imag_V_q0;
                p_Val2_s_reg_928 <= descramble_buf_0_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_2_reg_899 = ap_const_lv1_0) and (exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_2_reg_947 <= descramble_buf_1_M_imag_V_q0;
                p_Val2_3_reg_942 <= descramble_buf_1_M_real_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter1_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_5_reg_972 <= p_Val2_5_fu_341_p2;
                tmp_10_reg_967 <= tmp_10_fu_338_p1;
                tmp_16_reg_977 <= p_Val2_5_fu_341_p2(16 downto 1);
                tmp_3_reg_962 <= tmp_3_fu_334_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter5_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter5_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_Val2_8_reg_1068 <= grp_fu_844_p2;
                tmp_1_i_cast_i_reg_1073 <= grp_fu_850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter2_tmp_2_reg_899 = ap_const_lv1_0) and (ap_reg_pp0_iter2_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                p_y_M_real_V_read_assign_reg_997 <= p_y_M_real_V_read_assign_fu_427_p3;
                tmp_11_reg_982 <= r_V_1_fu_357_p2(16 downto 16);
                tmp_12_reg_987 <= p_neg2_fu_373_p2(16 downto 1);
                tmp_13_reg_992 <= r_V_1_fu_357_p2(16 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter8_exitcond1301_i_reg_880 = ap_const_lv1_0))) then
                tmp_22_reg_1130 <= ap_phi_reg_pp0_iter9_t_V_4_reg_274(15 downto 15);
                tmp_24_reg_1135 <= ap_phi_reg_pp0_iter9_t_V_4_reg_274(15 downto 1);
                tmp_26_reg_1140 <= tmp_26_fu_667_p2;
                tmp_27_reg_1145 <= ap_phi_reg_pp0_iter9_t_V_5_reg_265(15 downto 15);
                tmp_29_reg_1150 <= ap_phi_reg_pp0_iter9_t_V_5_reg_265(15 downto 1);
                tmp_31_reg_1155 <= tmp_31_fu_707_p2;
                tmp_34_reg_1160 <= ap_phi_reg_pp0_iter9_t_V_6_reg_256(15 downto 15);
                tmp_36_reg_1165 <= ap_phi_reg_pp0_iter9_t_V_6_reg_256(15 downto 1);
                tmp_38_reg_1170 <= tmp_38_fu_747_p2;
                tmp_40_reg_1175 <= ap_phi_reg_pp0_iter9_t_V_7_reg_247(15 downto 15);
                tmp_42_reg_1180 <= ap_phi_reg_pp0_iter9_t_V_7_reg_247(15 downto 1);
                tmp_44_reg_1185 <= tmp_44_fu_787_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond1301_i_fu_283_p2 = ap_const_lv1_0))) then
                tmp_2_reg_899 <= tmp_2_fu_303_p2;
                tmp_32_reg_923 <= tmp_32_fu_325_p1;
            end if;
        end if;
    end process;
    OP1_V_i_cast_i_reg_1038(30 downto 15) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter10, exitcond1301_i_fu_283_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond1301_i_fu_283_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond1301_i_fu_283_p2 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    OP1_V_i_cast_i_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_p_Val2_16_reg_952),31));
        OP2_V_1_i_cast_i_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_y_M_imag_V_read_assign_fu_565_p3),31));

        OP2_V_i_cast_i_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_y_M_real_V_read_assign_reg_997),31));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, real_spectrum_lo_V_M_real_V1_status)
    begin
                ap_block_pp0_stage0_01001 <= ((real_spectrum_lo_V_M_real_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, real_spectrum_lo_V_M_real_V1_status)
    begin
                ap_block_pp0_stage0_11001 <= ((real_spectrum_lo_V_M_real_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, real_spectrum_lo_V_M_real_V1_status)
    begin
                ap_block_pp0_stage0_subdone <= ((real_spectrum_lo_V_M_real_V1_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp0_stage0_iter10_assign_proc : process(ap_reg_pp0_iter9_exitcond1301_i_reg_880, real_spectrum_lo_V_M_real_V1_status)
    begin
                ap_block_state12_pp0_stage0_iter10 <= ((real_spectrum_lo_V_M_real_V1_status = ap_const_logic_0) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond1301_i_fu_283_p2)
    begin
        if ((exitcond1301_i_fu_283_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_t_V_4_reg_274 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_5_reg_265 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_6_reg_256 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_t_V_7_reg_247 <= "XXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;
    cdata1_M_imag_V_1_fu_597_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter7_f_M_imag_V_reg_1017) + unsigned(p_Val2_13_reg_1084));
    cdata1_M_imag_V_fu_613_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter7_p_Val2_s_reg_928) - unsigned(ap_reg_pp0_iter7_p_Val2_1_reg_935));
    cdata1_M_real_V_1_fu_593_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter7_f_M_real_V_reg_1056) + unsigned(p_Val2_11_reg_1078));
    cdata1_M_real_V_fu_609_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter7_p_Val2_1_reg_935) + unsigned(ap_reg_pp0_iter7_p_Val2_s_reg_928));
    cdata2_M_imag_V_1_fu_605_p2 <= std_logic_vector(unsigned(p_Val2_13_reg_1084) - unsigned(ap_reg_pp0_iter7_f_M_imag_V_reg_1017));
    cdata2_M_real_V_1_fu_601_p2 <= std_logic_vector(unsigned(ap_reg_pp0_iter7_f_M_real_V_reg_1056) - unsigned(p_Val2_11_reg_1078));
    descramble_buf_0_M_imag_V_address0 <= tmp_s_fu_295_p1(8 - 1 downto 0);

    descramble_buf_0_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_0_M_real_V_address0 <= tmp_s_fu_295_p1(8 - 1 downto 0);

    descramble_buf_0_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_0_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_imag_V_address0 <= newIndex3_fu_319_p1(8 - 1 downto 0);
    descramble_buf_1_M_imag_V_address1 <= ap_const_lv64_0(8 - 1 downto 0);

    descramble_buf_1_M_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_imag_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_imag_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    descramble_buf_1_M_real_V_address0 <= newIndex3_fu_319_p1(8 - 1 downto 0);
    descramble_buf_1_M_real_V_address1 <= ap_const_lv64_0(8 - 1 downto 0);

    descramble_buf_1_M_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    descramble_buf_1_M_real_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_1;
        else 
            descramble_buf_1_M_real_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1301_i_fu_283_p2 <= "1" when (i2_0_i_reg_236 = ap_const_lv9_100) else "0";
    f_M_imag_V_fu_500_p3 <= 
        tmp_14_fu_495_p2 when (tmp_11_reg_982(0) = '1') else 
        tmp_13_reg_992;
    f_M_real_V_fu_554_p3 <= 
        tmp_8_fu_549_p2 when (tmp_9_reg_1002(0) = '1') else 
        tmp_5_reg_1012;

    grp_fu_844_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_844_ce <= ap_const_logic_1;
        else 
            grp_fu_844_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_844_p0 <= grp_fu_844_p00(15 - 1 downto 0);
    grp_fu_844_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_p_Val2_16_reg_952),31));
    grp_fu_844_p1 <= OP2_V_i_cast_i_fu_543_p1(16 - 1 downto 0);

    grp_fu_850_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_850_ce <= ap_const_logic_1;
        else 
            grp_fu_850_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_850_p0 <= OP2_V_i_cast_i_fu_543_p1(16 - 1 downto 0);

    grp_fu_856_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_856_ce <= ap_const_logic_1;
        else 
            grp_fu_856_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_856_p0 <= tmp_i_reg_1050(16 - 1 downto 0);
    grp_fu_856_p1 <= OP2_V_1_i_cast_i_fu_571_p1(16 - 1 downto 0);

    grp_fu_863_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_863_ce <= ap_const_logic_1;
        else 
            grp_fu_863_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_863_p0 <= OP1_V_i_cast_i_reg_1038(15 - 1 downto 0);
    grp_fu_863_p1 <= OP2_V_1_i_cast_i_fu_571_p1(16 - 1 downto 0);
    i_fu_289_p2 <= std_logic_vector(unsigned(i2_0_i_reg_236) + unsigned(ap_const_lv9_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    newIndex2_fu_313_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(tmp_fu_309_p1));
    newIndex3_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newIndex2_fu_313_p2),64));
    p_Val2_4_fu_329_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Val2_2_reg_947));
    p_Val2_5_fu_341_p2 <= std_logic_vector(signed(tmp_3_fu_334_p1) - signed(tmp_10_fu_338_p1));
    p_neg1_fu_469_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_21_tr_fu_447_p1));
    p_neg2_fu_373_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_26_tr_fu_361_p1));
    p_neg3_fu_641_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_37_tr_fu_629_p1));
    p_neg4_fu_681_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_40_tr_fu_625_p1));
    p_neg5_fu_721_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_46_tr_fu_621_p1));
    p_neg6_fu_761_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_49_tr_fu_617_p1));
    p_neg_fu_514_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(tmp_33_tr_fu_457_p1));
    p_neg_t_fu_412_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_16_reg_977));
    p_y_M_imag_V_read_assign_fu_565_p3 <= 
        tmp_21_fu_560_p2 when (tmp_18_reg_1023(0) = '1') else 
        tmp_20_reg_1033;
    p_y_M_real_V_read_assign_fu_427_p3 <= 
        p_neg_t_fu_412_p2 when (tmp_15_fu_404_p3(0) = '1') else 
        tmp_17_fu_417_p4;
    r_V_1_fu_357_p2 <= std_logic_vector(signed(tmp_10_reg_967) + signed(tmp_3_reg_962));
    r_V_2_fu_451_p2 <= std_logic_vector(signed(tmp_7_fu_435_p1) - signed(tmp_6_fu_438_p1));
    r_V_fu_441_p2 <= std_logic_vector(signed(tmp_6_fu_438_p1) + signed(tmp_7_fu_435_p1));
    real_spectrum_hi_buf_i_0_address0 <= tmp_33_fu_818_p1(8 - 1 downto 0);

    real_spectrum_hi_buf_i_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_spectrum_hi_buf_i_0_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_0_d0 <= 
        tmp_38_reg_1170 when (tmp_34_reg_1160(0) = '1') else 
        tmp_37_fu_824_p1;

    real_spectrum_hi_buf_i_0_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_i_0_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_1_address0 <= tmp_33_fu_818_p1(8 - 1 downto 0);

    real_spectrum_hi_buf_i_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            real_spectrum_hi_buf_i_1_ce0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_spectrum_hi_buf_i_1_d0 <= 
        tmp_44_reg_1185 when (tmp_40_reg_1175(0) = '1') else 
        tmp_43_fu_834_p1;

    real_spectrum_hi_buf_i_1_we0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
            real_spectrum_hi_buf_i_1_we0 <= ap_const_logic_1;
        else 
            real_spectrum_hi_buf_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_spectrum_lo_V_M_imag_V_blk_n_assign_proc : process(real_spectrum_lo_V_M_imag_V_full_n, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0, ap_reg_pp0_iter9_exitcond1301_i_reg_880)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            real_spectrum_lo_V_M_imag_V_blk_n <= real_spectrum_lo_V_M_imag_V_full_n;
        else 
            real_spectrum_lo_V_M_imag_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_spectrum_lo_V_M_imag_V_din <= 
        tmp_31_reg_1155 when (tmp_27_reg_1145(0) = '1') else 
        tmp_30_fu_803_p1;
    real_spectrum_lo_V_M_imag_V_write <= real_spectrum_lo_V_M_real_V1_update;
    real_spectrum_lo_V_M_real_V1_status <= (real_spectrum_lo_V_M_real_V_full_n and real_spectrum_lo_V_M_imag_V_full_n);

    real_spectrum_lo_V_M_real_V1_update_assign_proc : process(ap_enable_reg_pp0_iter10, ap_reg_pp0_iter9_exitcond1301_i_reg_880, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0))) then 
            real_spectrum_lo_V_M_real_V1_update <= ap_const_logic_1;
        else 
            real_spectrum_lo_V_M_real_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    real_spectrum_lo_V_M_real_V_blk_n_assign_proc : process(real_spectrum_lo_V_M_real_V_full_n, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0, ap_reg_pp0_iter9_exitcond1301_i_reg_880)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_reg_pp0_iter9_exitcond1301_i_reg_880 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            real_spectrum_lo_V_M_real_V_blk_n <= real_spectrum_lo_V_M_real_V_full_n;
        else 
            real_spectrum_lo_V_M_real_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_spectrum_lo_V_M_real_V_din <= 
        tmp_26_reg_1140 when (tmp_22_reg_1130(0) = '1') else 
        tmp_25_fu_793_p1;
    real_spectrum_lo_V_M_real_V_write <= real_spectrum_lo_V_M_real_V1_update;

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    t_V_2_fu_399_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(p_Val2_5_reg_972));
        tmp_10_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_1_reg_935),17));

    tmp_14_fu_495_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_12_reg_987));
    tmp_15_fu_404_p3 <= t_V_2_fu_399_p2(16 downto 16);
    tmp_17_fu_417_p4 <= t_V_2_fu_399_p2(16 downto 1);
    tmp_21_fu_560_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_19_reg_1028));
    tmp_21_tr_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_441_p2),18));
    tmp_23_fu_647_p4 <= p_neg3_fu_641_p2(16 downto 1);
        tmp_25_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_reg_1135),16));

    tmp_26_fu_667_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_23_fu_647_p4));
    tmp_26_tr_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_357_p2),18));
    tmp_28_fu_687_p4 <= p_neg4_fu_681_p2(16 downto 1);
    tmp_2_fu_303_p2 <= "1" when (i2_0_i_reg_236 = ap_const_lv9_0) else "0";
        tmp_30_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_reg_1150),16));

    tmp_31_fu_707_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_28_fu_687_p4));
    tmp_32_fu_325_p1 <= i2_0_i_reg_236(8 - 1 downto 0);
    tmp_33_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_cast_fu_813_p2),64));
    tmp_33_tr_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_451_p2),18));
    tmp_35_fu_727_p4 <= p_neg5_fu_721_p2(16 downto 1);
        tmp_37_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_36_reg_1165),16));

        tmp_37_tr_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter9_t_V_4_reg_274),17));

    tmp_38_fu_747_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_35_fu_727_p4));
        tmp_3_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_4_fu_329_p2),17));

        tmp_40_tr_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter9_t_V_5_reg_265),17));

    tmp_41_fu_767_p4 <= p_neg6_fu_761_p2(16 downto 1);
        tmp_43_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_reg_1180),16));

    tmp_44_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_41_fu_767_p4));
        tmp_46_tr_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter9_t_V_6_reg_256),17));

        tmp_49_tr_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter9_t_V_7_reg_247),17));

    tmp_55_cast_fu_813_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(ap_reg_pp0_iter9_tmp_32_reg_923));
        tmp_6_fu_438_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_p_Val2_s_reg_928),17));

        tmp_7_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_p_Val2_3_reg_942),17));

    tmp_8_fu_549_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_4_reg_1007));
    tmp_fu_309_p1 <= i2_0_i_reg_236(8 - 1 downto 0);
        tmp_i_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter3_p_Val2_17_reg_957),31));

    tmp_s_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_i_reg_236),64));
    twid_rom_0_address0 <= tmp_s_fu_295_p1(8 - 1 downto 0);

    twid_rom_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twid_rom_0_ce0 <= ap_const_logic_1;
        else 
            twid_rom_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    twid_rom_1_address0 <= tmp_s_fu_295_p1(8 - 1 downto 0);

    twid_rom_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            twid_rom_1_ce0 <= ap_const_logic_1;
        else 
            twid_rom_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
