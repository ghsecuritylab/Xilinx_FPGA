// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_realfft_be_desc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dout_V_din,
        dout_V_full_n,
        dout_V_write,
        descramble_buf_0_M_imag_V_address0,
        descramble_buf_0_M_imag_V_ce0,
        descramble_buf_0_M_imag_V_q0,
        descramble_buf_0_M_imag_V_address1,
        descramble_buf_0_M_imag_V_ce1,
        descramble_buf_0_M_imag_V_q1,
        descramble_buf_1_M_imag_V_address0,
        descramble_buf_1_M_imag_V_ce0,
        descramble_buf_1_M_imag_V_q0,
        descramble_buf_1_M_imag_V_address1,
        descramble_buf_1_M_imag_V_ce1,
        descramble_buf_1_M_imag_V_q1,
        descramble_buf_0_M_real_V_address0,
        descramble_buf_0_M_real_V_ce0,
        descramble_buf_0_M_real_V_q0,
        descramble_buf_0_M_real_V_address1,
        descramble_buf_0_M_real_V_ce1,
        descramble_buf_0_M_real_V_q1,
        descramble_buf_1_M_real_V_address0,
        descramble_buf_1_M_real_V_ce0,
        descramble_buf_1_M_real_V_q0,
        descramble_buf_1_M_real_V_address1,
        descramble_buf_1_M_real_V_ce1,
        descramble_buf_1_M_real_V_q1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state14 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] dout_V_din;
input   dout_V_full_n;
output   dout_V_write;
output  [7:0] descramble_buf_0_M_imag_V_address0;
output   descramble_buf_0_M_imag_V_ce0;
input  [15:0] descramble_buf_0_M_imag_V_q0;
output  [7:0] descramble_buf_0_M_imag_V_address1;
output   descramble_buf_0_M_imag_V_ce1;
input  [15:0] descramble_buf_0_M_imag_V_q1;
output  [7:0] descramble_buf_1_M_imag_V_address0;
output   descramble_buf_1_M_imag_V_ce0;
input  [15:0] descramble_buf_1_M_imag_V_q0;
output  [7:0] descramble_buf_1_M_imag_V_address1;
output   descramble_buf_1_M_imag_V_ce1;
input  [15:0] descramble_buf_1_M_imag_V_q1;
output  [7:0] descramble_buf_0_M_real_V_address0;
output   descramble_buf_0_M_real_V_ce0;
input  [15:0] descramble_buf_0_M_real_V_q0;
output  [7:0] descramble_buf_0_M_real_V_address1;
output   descramble_buf_0_M_real_V_ce1;
input  [15:0] descramble_buf_0_M_real_V_q1;
output  [7:0] descramble_buf_1_M_real_V_address0;
output   descramble_buf_1_M_real_V_ce0;
input  [15:0] descramble_buf_1_M_real_V_q0;
output  [7:0] descramble_buf_1_M_real_V_address1;
output   descramble_buf_1_M_real_V_ce1;
input  [15:0] descramble_buf_1_M_real_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dout_V_write;
reg descramble_buf_0_M_imag_V_ce0;
reg descramble_buf_0_M_imag_V_ce1;
reg descramble_buf_1_M_imag_V_ce0;
reg descramble_buf_1_M_imag_V_ce1;
reg descramble_buf_0_M_real_V_ce0;
reg descramble_buf_0_M_real_V_ce1;
reg descramble_buf_1_M_real_V_ce0;
reg descramble_buf_1_M_real_V_ce1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] twid_rom_0_address0;
reg    twid_rom_0_ce0;
wire   [15:0] twid_rom_0_q0;
wire   [8:0] twid_rom_1_address0;
reg    twid_rom_1_ce0;
wire   [15:0] twid_rom_1_q0;
reg    dout_V_blk_n;
reg    ap_enable_reg_pp0_iter11;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter10_exitcond_i_reg_655;
reg   [9:0] i1_0_i_reg_213;
reg   [9:0] ap_reg_pp0_iter1_i1_0_i_reg_213;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
reg    ap_block_state13_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_11001;
reg   [9:0] ap_reg_pp0_iter2_i1_0_i_reg_213;
reg   [9:0] ap_reg_pp0_iter3_i1_0_i_reg_213;
wire   [0:0] exitcond_i_fu_243_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter2_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter3_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter4_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter5_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter6_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter7_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter8_exitcond_i_reg_655;
reg   [0:0] ap_reg_pp0_iter9_exitcond_i_reg_655;
wire   [9:0] i_fu_249_p2;
reg   [9:0] i_reg_659;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_8_fu_255_p2;
reg   [0:0] tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter1_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter2_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter3_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter4_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter5_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter6_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter7_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter8_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter9_tmp_8_reg_664;
reg   [0:0] ap_reg_pp0_iter10_tmp_8_reg_664;
wire   [7:0] tmp_9_fu_267_p1;
reg   [7:0] tmp_9_reg_668;
reg   [0:0] tmp_13_reg_673;
reg   [0:0] ap_reg_pp0_iter1_tmp_13_reg_673;
reg   [0:0] ap_reg_pp0_iter2_tmp_13_reg_673;
reg   [15:0] descramble_buf_0_M_6_reg_719;
reg    ap_enable_reg_pp0_iter2;
reg   [15:0] descramble_buf_1_M_6_reg_724;
reg   [15:0] descramble_buf_0_M_7_reg_729;
reg   [15:0] descramble_buf_1_M_7_reg_734;
wire   [0:0] icmp_fu_308_p2;
reg   [0:0] icmp_reg_739;
reg   [15:0] descramble_buf_0_M_1_reg_745;
reg    ap_enable_reg_pp0_iter3;
reg   [15:0] descramble_buf_1_M_1_reg_750;
reg   [15:0] descramble_buf_0_M_3_reg_755;
reg   [15:0] descramble_buf_1_M_3_reg_760;
wire   [15:0] p_Val2_4_fu_314_p3;
reg   [15:0] p_Val2_4_reg_765;
wire   [15:0] p_Val2_6_fu_324_p2;
reg   [15:0] p_Val2_6_reg_770;
wire   [15:0] p_Val2_s_fu_336_p3;
reg   [15:0] p_Val2_s_reg_775;
reg   [15:0] ap_reg_pp0_iter5_p_Val2_s_reg_775;
reg   [15:0] ap_reg_pp0_iter6_p_Val2_s_reg_775;
reg   [15:0] ap_reg_pp0_iter7_p_Val2_s_reg_775;
reg   [15:0] ap_reg_pp0_iter8_p_Val2_s_reg_775;
wire   [15:0] p_Val2_2_fu_341_p3;
reg   [15:0] p_Val2_2_reg_781;
reg   [15:0] ap_reg_pp0_iter5_p_Val2_2_reg_781;
reg   [15:0] ap_reg_pp0_iter6_p_Val2_2_reg_781;
reg   [15:0] ap_reg_pp0_iter7_p_Val2_2_reg_781;
reg   [15:0] ap_reg_pp0_iter8_p_Val2_2_reg_781;
wire   [16:0] r_V_fu_356_p2;
reg   [16:0] r_V_reg_787;
reg   [16:0] ap_reg_pp0_iter5_r_V_reg_787;
reg   [16:0] ap_reg_pp0_iter6_r_V_reg_787;
reg   [16:0] ap_reg_pp0_iter7_r_V_reg_787;
reg   [16:0] ap_reg_pp0_iter8_r_V_reg_787;
reg   [16:0] ap_reg_pp0_iter9_r_V_reg_787;
wire   [16:0] r_V_2_fu_362_p2;
reg   [16:0] r_V_2_reg_794;
wire   [16:0] r_V_1_fu_372_p2;
reg   [16:0] r_V_1_reg_799;
reg   [16:0] ap_reg_pp0_iter5_r_V_1_reg_799;
reg   [16:0] ap_reg_pp0_iter6_r_V_1_reg_799;
reg   [16:0] ap_reg_pp0_iter7_r_V_1_reg_799;
reg   [16:0] ap_reg_pp0_iter8_r_V_1_reg_799;
reg   [16:0] ap_reg_pp0_iter9_r_V_1_reg_799;
wire   [16:0] p_Val2_5_fu_378_p2;
reg   [16:0] p_Val2_5_reg_806;
reg   [15:0] tmp_18_reg_811;
reg   [0:0] tmp_25_reg_816;
reg   [0:0] ap_reg_pp0_iter5_tmp_25_reg_816;
reg   [15:0] tmp_22_reg_821;
reg   [15:0] ap_reg_pp0_iter5_tmp_22_reg_821;
wire   [15:0] p_y_M_real_V_read_a_fu_443_p3;
reg   [15:0] p_y_M_real_V_read_a_reg_836;
reg   [15:0] tmp_21_reg_841;
reg  signed [15:0] p_Val2_14_reg_846;
reg  signed [15:0] p_Val2_15_reg_851;
wire   [15:0] p_y_M_imag_V_read_a_fu_472_p3;
reg   [15:0] p_y_M_imag_V_read_a_reg_856;
wire  signed [30:0] tmp_i_fu_478_p1;
reg  signed [30:0] tmp_i_reg_861;
wire  signed [30:0] tmp_1_i_fu_481_p1;
wire  signed [30:0] tmp_2_i_fu_484_p1;
reg  signed [30:0] tmp_2_i_reg_873;
wire  signed [30:0] tmp_3_i_fu_487_p1;
reg   [15:0] tmp_6_reg_885;
reg   [15:0] tmp_14_reg_890;
wire  signed [30:0] grp_fu_631_p2;
reg  signed [30:0] tmp1_i_cast_i_reg_895;
wire  signed [30:0] grp_fu_637_p2;
reg  signed [30:0] tmp_3_i_cast_i_reg_900;
wire   [15:0] tmp_11_fu_528_p2;
reg   [15:0] tmp_11_reg_905;
wire   [15:0] tmp_16_fu_533_p2;
reg   [15:0] tmp_16_reg_910;
wire  signed [30:0] grp_fu_643_p3;
reg  signed [30:0] p_Val2_9_reg_915;
reg    ap_enable_reg_pp0_iter9;
wire  signed [30:0] grp_fu_649_p3;
reg  signed [30:0] p_Val2_7_reg_920;
wire   [15:0] cdata_M_real_V_fu_538_p2;
reg   [15:0] cdata_M_real_V_reg_925;
wire   [15:0] p_Val2_1_fu_542_p2;
reg   [15:0] p_Val2_1_reg_930;
wire   [15:0] cdata_M_real_V_1_fu_610_p2;
reg   [15:0] cdata_M_real_V_1_reg_935;
wire   [15:0] complex_M_imag_V_wr_fu_616_p2;
reg   [15:0] complex_M_imag_V_wr_reg_940;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter10;
reg   [9:0] ap_phi_mux_i1_0_i_phi_fu_217_p4;
reg   [15:0] ap_phi_mux_tmp_M_real_V_phi_fu_228_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_225;
reg   [15:0] ap_phi_mux_cdata_M_imag_V_phi_fu_237_p4;
wire   [15:0] ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_234;
reg   [15:0] ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_234;
wire   [63:0] newIndex5_fu_279_p1;
wire   [63:0] newIndex3_fu_290_p1;
wire   [63:0] tmp_7_fu_330_p1;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] tmp_s_fu_261_p2;
wire   [7:0] tmp_fu_286_p1;
wire   [1:0] tmp_1_fu_298_p4;
wire   [15:0] p_Val2_3_fu_319_p3;
wire  signed [16:0] tmp_4_fu_352_p1;
wire  signed [16:0] tmp_5_fu_346_p1;
wire  signed [16:0] tmp_12_fu_368_p1;
wire  signed [16:0] tmp_2_fu_349_p1;
wire   [16:0] t_V_2_fu_415_p2;
wire   [0:0] tmp_24_fu_420_p3;
wire   [15:0] p_neg_t_fu_428_p2;
wire   [15:0] tmp_19_fu_433_p4;
wire   [17:0] tmp_29_tr_fu_412_p1;
wire   [17:0] p_neg_fu_451_p2;
wire   [15:0] tmp_23_fu_467_p2;
wire   [17:0] tmp_17_tr_fu_490_p1;
wire   [17:0] p_neg1_fu_493_p2;
wire   [17:0] tmp_22_tr_fu_509_p1;
wire   [17:0] p_neg2_fu_512_p2;
wire   [0:0] tmp_17_fu_546_p3;
wire   [15:0] tmp_10_fu_553_p4;
wire   [0:0] tmp_20_fu_569_p3;
wire   [15:0] tmp_15_fu_576_p4;
wire   [15:0] f_M_real_V_fu_562_p3;
wire   [15:0] p_Val2_11_fu_592_p4;
wire   [15:0] f_M_imag_V_fu_585_p3;
wire   [15:0] p_Val2_13_fu_601_p4;
wire  signed [15:0] grp_fu_631_p1;
wire  signed [15:0] grp_fu_637_p0;
wire  signed [15:0] grp_fu_643_p0;
wire  signed [15:0] grp_fu_643_p1;
wire  signed [15:0] grp_fu_649_p0;
wire  signed [15:0] grp_fu_649_p1;
reg    grp_fu_631_ce;
reg    grp_fu_637_ce;
reg    grp_fu_643_ce;
reg    grp_fu_649_ce;
wire    ap_CS_fsm_state14;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
end

Loop_realfft_be_dbkb #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
twid_rom_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(twid_rom_0_address0),
    .ce0(twid_rom_0_ce0),
    .q0(twid_rom_0_q0)
);

Loop_realfft_be_dcud #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
twid_rom_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(twid_rom_1_address0),
    .ce0(twid_rom_1_ce0),
    .q0(twid_rom_1_q0)
);

hls_xfft2real_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_muldEe_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_Val2_14_reg_846),
    .din1(grp_fu_631_p1),
    .ce(grp_fu_631_ce),
    .dout(grp_fu_631_p2)
);

hls_xfft2real_muldEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_muldEe_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_637_p0),
    .din1(p_Val2_15_reg_851),
    .ce(grp_fu_637_ce),
    .dout(grp_fu_637_p2)
);

hls_xfft2real_maceOg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_maceOg_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_643_p0),
    .din1(grp_fu_643_p1),
    .din2(tmp1_i_cast_i_reg_895),
    .ce(grp_fu_643_ce),
    .dout(grp_fu_643_p3)
);

hls_xfft2real_macfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
hls_xfft2real_macfYi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_649_p0),
    .din1(grp_fu_649_p1),
    .din2(tmp_3_i_cast_i_reg_900),
    .ce(grp_fu_649_ce),
    .dout(grp_fu_649_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_reg_pp0_iter9_exitcond_i_reg_655 == 1'd0) & (ap_reg_pp0_iter9_tmp_8_reg_664 == 1'd1))) begin
            ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_234 <= p_Val2_1_reg_930;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_234;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_reg_pp0_iter9_exitcond_i_reg_655 == 1'd0) & (ap_reg_pp0_iter9_tmp_8_reg_664 == 1'd1))) begin
            ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_225 <= cdata_M_real_V_reg_925;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_225;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i1_0_i_reg_213 <= 10'd0;
    end else if (((exitcond_i_reg_655 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i1_0_i_reg_213 <= i_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter10_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter10_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_225;
        i_reg_659 <= i_fu_249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter1_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter1_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter2_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter2_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter3_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter3_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter4_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter4_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter5_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter5_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter6_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter6_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter7_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter7_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter9_cdata_M_imag_V_reg_234 <= ap_phi_reg_pp0_iter8_cdata_M_imag_V_reg_234;
        ap_phi_reg_pp0_iter9_tmp_M_real_V_reg_225 <= ap_phi_reg_pp0_iter8_tmp_M_real_V_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter10_exitcond_i_reg_655 <= ap_reg_pp0_iter9_exitcond_i_reg_655;
        ap_reg_pp0_iter10_tmp_8_reg_664 <= ap_reg_pp0_iter9_tmp_8_reg_664;
        ap_reg_pp0_iter2_exitcond_i_reg_655 <= ap_reg_pp0_iter1_exitcond_i_reg_655;
        ap_reg_pp0_iter2_i1_0_i_reg_213 <= ap_reg_pp0_iter1_i1_0_i_reg_213;
        ap_reg_pp0_iter2_tmp_13_reg_673 <= ap_reg_pp0_iter1_tmp_13_reg_673;
        ap_reg_pp0_iter2_tmp_8_reg_664 <= ap_reg_pp0_iter1_tmp_8_reg_664;
        ap_reg_pp0_iter3_exitcond_i_reg_655 <= ap_reg_pp0_iter2_exitcond_i_reg_655;
        ap_reg_pp0_iter3_i1_0_i_reg_213 <= ap_reg_pp0_iter2_i1_0_i_reg_213;
        ap_reg_pp0_iter3_tmp_8_reg_664 <= ap_reg_pp0_iter2_tmp_8_reg_664;
        ap_reg_pp0_iter4_exitcond_i_reg_655 <= ap_reg_pp0_iter3_exitcond_i_reg_655;
        ap_reg_pp0_iter4_tmp_8_reg_664 <= ap_reg_pp0_iter3_tmp_8_reg_664;
        ap_reg_pp0_iter5_exitcond_i_reg_655 <= ap_reg_pp0_iter4_exitcond_i_reg_655;
        ap_reg_pp0_iter5_p_Val2_2_reg_781 <= p_Val2_2_reg_781;
        ap_reg_pp0_iter5_p_Val2_s_reg_775 <= p_Val2_s_reg_775;
        ap_reg_pp0_iter5_r_V_1_reg_799 <= r_V_1_reg_799;
        ap_reg_pp0_iter5_r_V_reg_787 <= r_V_reg_787;
        ap_reg_pp0_iter5_tmp_22_reg_821 <= tmp_22_reg_821;
        ap_reg_pp0_iter5_tmp_25_reg_816 <= tmp_25_reg_816;
        ap_reg_pp0_iter5_tmp_8_reg_664 <= ap_reg_pp0_iter4_tmp_8_reg_664;
        ap_reg_pp0_iter6_exitcond_i_reg_655 <= ap_reg_pp0_iter5_exitcond_i_reg_655;
        ap_reg_pp0_iter6_p_Val2_2_reg_781 <= ap_reg_pp0_iter5_p_Val2_2_reg_781;
        ap_reg_pp0_iter6_p_Val2_s_reg_775 <= ap_reg_pp0_iter5_p_Val2_s_reg_775;
        ap_reg_pp0_iter6_r_V_1_reg_799 <= ap_reg_pp0_iter5_r_V_1_reg_799;
        ap_reg_pp0_iter6_r_V_reg_787 <= ap_reg_pp0_iter5_r_V_reg_787;
        ap_reg_pp0_iter6_tmp_8_reg_664 <= ap_reg_pp0_iter5_tmp_8_reg_664;
        ap_reg_pp0_iter7_exitcond_i_reg_655 <= ap_reg_pp0_iter6_exitcond_i_reg_655;
        ap_reg_pp0_iter7_p_Val2_2_reg_781 <= ap_reg_pp0_iter6_p_Val2_2_reg_781;
        ap_reg_pp0_iter7_p_Val2_s_reg_775 <= ap_reg_pp0_iter6_p_Val2_s_reg_775;
        ap_reg_pp0_iter7_r_V_1_reg_799 <= ap_reg_pp0_iter6_r_V_1_reg_799;
        ap_reg_pp0_iter7_r_V_reg_787 <= ap_reg_pp0_iter6_r_V_reg_787;
        ap_reg_pp0_iter7_tmp_8_reg_664 <= ap_reg_pp0_iter6_tmp_8_reg_664;
        ap_reg_pp0_iter8_exitcond_i_reg_655 <= ap_reg_pp0_iter7_exitcond_i_reg_655;
        ap_reg_pp0_iter8_p_Val2_2_reg_781 <= ap_reg_pp0_iter7_p_Val2_2_reg_781;
        ap_reg_pp0_iter8_p_Val2_s_reg_775 <= ap_reg_pp0_iter7_p_Val2_s_reg_775;
        ap_reg_pp0_iter8_r_V_1_reg_799 <= ap_reg_pp0_iter7_r_V_1_reg_799;
        ap_reg_pp0_iter8_r_V_reg_787 <= ap_reg_pp0_iter7_r_V_reg_787;
        ap_reg_pp0_iter8_tmp_8_reg_664 <= ap_reg_pp0_iter7_tmp_8_reg_664;
        ap_reg_pp0_iter9_exitcond_i_reg_655 <= ap_reg_pp0_iter8_exitcond_i_reg_655;
        ap_reg_pp0_iter9_r_V_1_reg_799 <= ap_reg_pp0_iter8_r_V_1_reg_799;
        ap_reg_pp0_iter9_r_V_reg_787 <= ap_reg_pp0_iter8_r_V_reg_787;
        ap_reg_pp0_iter9_tmp_8_reg_664 <= ap_reg_pp0_iter8_tmp_8_reg_664;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond_i_reg_655 <= exitcond_i_reg_655;
        ap_reg_pp0_iter1_i1_0_i_reg_213 <= i1_0_i_reg_213;
        ap_reg_pp0_iter1_tmp_13_reg_673 <= tmp_13_reg_673;
        ap_reg_pp0_iter1_tmp_8_reg_664 <= tmp_8_reg_664;
        exitcond_i_reg_655 <= exitcond_i_fu_243_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter9_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter9_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cdata_M_real_V_1_reg_935 <= cdata_M_real_V_1_fu_610_p2;
        complex_M_imag_V_wr_reg_940 <= complex_M_imag_V_wr_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_exitcond_i_reg_655 == 1'd0) & (ap_reg_pp0_iter8_tmp_8_reg_664 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cdata_M_real_V_reg_925 <= cdata_M_real_V_fu_538_p2;
        p_Val2_1_reg_930 <= p_Val2_1_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_i_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_1_reg_745 <= descramble_buf_0_M_real_V_q1;
        descramble_buf_0_M_3_reg_755 <= descramble_buf_0_M_imag_V_q1;
        descramble_buf_1_M_1_reg_750 <= descramble_buf_1_M_real_V_q1;
        descramble_buf_1_M_3_reg_760 <= descramble_buf_1_M_imag_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_13_reg_673 == 1'd0) & (ap_reg_pp0_iter1_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter1_exitcond_i_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_6_reg_719 <= descramble_buf_0_M_real_V_q0;
        descramble_buf_0_M_7_reg_729 <= descramble_buf_0_M_imag_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter1_exitcond_i_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_reg_pp0_iter1_tmp_13_reg_673 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_6_reg_724 <= descramble_buf_1_M_real_V_q0;
        descramble_buf_1_M_7_reg_734 <= descramble_buf_1_M_imag_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_reg_739 <= icmp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter4_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_14_reg_846 <= twid_rom_0_q0;
        p_Val2_15_reg_851 <= twid_rom_1_q0;
        p_y_M_real_V_read_a_reg_836 <= p_y_M_real_V_read_a_fu_443_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_2_reg_781 <= p_Val2_2_fu_341_p3;
        p_Val2_s_reg_775 <= p_Val2_s_fu_336_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter2_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_reg_765 <= p_Val2_4_fu_314_p3;
        p_Val2_6_reg_770 <= p_Val2_6_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter3_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_5_reg_806 <= p_Val2_5_fu_378_p2;
        r_V_1_reg_799 <= r_V_1_fu_372_p2;
        r_V_2_reg_794 <= r_V_2_fu_362_p2;
        r_V_reg_787 <= r_V_fu_356_p2;
        tmp_18_reg_811 <= {{p_Val2_5_fu_378_p2[16:1]}};
        tmp_22_reg_821 <= {{r_V_2_fu_362_p2[16:1]}};
        tmp_25_reg_816 <= r_V_2_fu_362_p2[32'd16];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter8_exitcond_i_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_7_reg_920 <= grp_fu_649_p3;
        p_Val2_9_reg_915 <= grp_fu_643_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter5_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_y_M_imag_V_read_a_reg_856 <= p_y_M_imag_V_read_a_fu_472_p3;
        tmp_2_i_reg_873 <= tmp_2_i_fu_484_p1;
        tmp_i_reg_861 <= tmp_i_fu_478_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter7_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp1_i_cast_i_reg_895 <= grp_fu_631_p2;
        tmp_14_reg_890 <= {{p_neg2_fu_512_p2[16:1]}};
        tmp_3_i_cast_i_reg_900 <= grp_fu_637_p2;
        tmp_6_reg_885 <= {{p_neg1_fu_493_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter8_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_11_reg_905 <= tmp_11_fu_528_p2;
        tmp_16_reg_910 <= tmp_16_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_255_p2 == 1'd0) & (exitcond_i_fu_243_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_13_reg_673 <= tmp_s_fu_261_p2[32'd8];
        tmp_9_reg_668 <= tmp_9_fu_267_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter4_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter4_exitcond_i_reg_655 == 1'd0) & (tmp_25_reg_816 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_21_reg_841 <= {{p_neg_fu_451_p2[16:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_243_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_8_reg_664 <= tmp_8_fu_255_p2;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_243_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter10_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_mux_cdata_M_imag_V_phi_fu_237_p4 = complex_M_imag_V_wr_reg_940;
    end else begin
        ap_phi_mux_cdata_M_imag_V_phi_fu_237_p4 = ap_phi_reg_pp0_iter11_cdata_M_imag_V_reg_234;
    end
end

always @ (*) begin
    if (((exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i1_0_i_phi_fu_217_p4 = i_reg_659;
    end else begin
        ap_phi_mux_i1_0_i_phi_fu_217_p4 = i1_0_i_reg_213;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter10_tmp_8_reg_664 == 1'd0) & (ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_mux_tmp_M_real_V_phi_fu_228_p4 = cdata_M_real_V_1_reg_935;
    end else begin
        ap_phi_mux_tmp_M_real_V_phi_fu_228_p4 = ap_phi_reg_pp0_iter11_tmp_M_real_V_reg_225;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_0_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_0_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_imag_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_real_V_ce0 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        descramble_buf_1_M_real_V_ce1 = 1'b1;
    end else begin
        descramble_buf_1_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        dout_V_blk_n = dout_V_full_n;
    end else begin
        dout_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dout_V_write = 1'b1;
    end else begin
        dout_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_631_ce = 1'b1;
    end else begin
        grp_fu_631_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_637_ce = 1'b1;
    end else begin
        grp_fu_637_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_643_ce = 1'b1;
    end else begin
        grp_fu_643_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_649_ce = 1'b1;
    end else begin
        grp_fu_649_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_0_ce0 = 1'b1;
    end else begin
        twid_rom_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        twid_rom_1_ce0 = 1'b1;
    end else begin
        twid_rom_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_fu_243_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter10 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_i_fu_243_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (dout_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (dout_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (dout_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage0_iter11 = ((ap_reg_pp0_iter10_exitcond_i_reg_655 == 1'd0) & (dout_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_cdata_M_imag_V_reg_234 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_M_real_V_reg_225 = 'bx;

assign cdata_M_real_V_1_fu_610_p2 = (f_M_real_V_fu_562_p3 + p_Val2_11_fu_592_p4);

assign cdata_M_real_V_fu_538_p2 = (ap_reg_pp0_iter8_p_Val2_2_reg_781 + ap_reg_pp0_iter8_p_Val2_s_reg_775);

assign complex_M_imag_V_wr_fu_616_p2 = (f_M_imag_V_fu_585_p3 + p_Val2_13_fu_601_p4);

assign descramble_buf_0_M_imag_V_address0 = newIndex5_fu_279_p1;

assign descramble_buf_0_M_imag_V_address1 = newIndex3_fu_290_p1;

assign descramble_buf_0_M_real_V_address0 = newIndex5_fu_279_p1;

assign descramble_buf_0_M_real_V_address1 = newIndex3_fu_290_p1;

assign descramble_buf_1_M_imag_V_address0 = newIndex5_fu_279_p1;

assign descramble_buf_1_M_imag_V_address1 = newIndex3_fu_290_p1;

assign descramble_buf_1_M_real_V_address0 = newIndex5_fu_279_p1;

assign descramble_buf_1_M_real_V_address1 = newIndex3_fu_290_p1;

assign dout_V_din = {{ap_phi_mux_cdata_M_imag_V_phi_fu_237_p4}, {ap_phi_mux_tmp_M_real_V_phi_fu_228_p4}};

assign exitcond_i_fu_243_p2 = ((ap_phi_mux_i1_0_i_phi_fu_217_p4 == 10'd512) ? 1'b1 : 1'b0);

assign f_M_imag_V_fu_585_p3 = ((tmp_20_fu_569_p3[0:0] === 1'b1) ? tmp_16_reg_910 : tmp_15_fu_576_p4);

assign f_M_real_V_fu_562_p3 = ((tmp_17_fu_546_p3[0:0] === 1'b1) ? tmp_11_reg_905 : tmp_10_fu_553_p4);

assign grp_fu_631_p1 = tmp_1_i_fu_481_p1;

assign grp_fu_637_p0 = tmp_1_i_fu_481_p1;

assign grp_fu_643_p0 = tmp_2_i_reg_873;

assign grp_fu_643_p1 = tmp_3_i_fu_487_p1;

assign grp_fu_649_p0 = tmp_i_reg_861;

assign grp_fu_649_p1 = tmp_3_i_fu_487_p1;

assign i_fu_249_p2 = (ap_phi_mux_i1_0_i_phi_fu_217_p4 + 10'd1);

assign icmp_fu_308_p2 = ((tmp_1_fu_298_p4 == 2'd0) ? 1'b1 : 1'b0);

assign newIndex3_fu_290_p1 = tmp_fu_286_p1;

assign newIndex5_fu_279_p1 = tmp_9_reg_668;

assign p_Val2_11_fu_592_p4 = {{p_Val2_9_reg_915[30:15]}};

assign p_Val2_13_fu_601_p4 = {{p_Val2_7_reg_920[30:15]}};

assign p_Val2_1_fu_542_p2 = (ap_reg_pp0_iter8_p_Val2_s_reg_775 - ap_reg_pp0_iter8_p_Val2_2_reg_781);

assign p_Val2_2_fu_341_p3 = ((icmp_reg_739[0:0] === 1'b1) ? descramble_buf_0_M_3_reg_755 : descramble_buf_1_M_3_reg_760);

assign p_Val2_3_fu_319_p3 = ((ap_reg_pp0_iter2_tmp_13_reg_673[0:0] === 1'b1) ? descramble_buf_1_M_7_reg_734 : descramble_buf_0_M_7_reg_729);

assign p_Val2_4_fu_314_p3 = ((ap_reg_pp0_iter2_tmp_13_reg_673[0:0] === 1'b1) ? descramble_buf_1_M_6_reg_724 : descramble_buf_0_M_6_reg_719);

assign p_Val2_5_fu_378_p2 = ($signed(tmp_2_fu_349_p1) - $signed(tmp_12_fu_368_p1));

assign p_Val2_6_fu_324_p2 = (16'd0 - p_Val2_3_fu_319_p3);

assign p_Val2_s_fu_336_p3 = ((icmp_reg_739[0:0] === 1'b1) ? descramble_buf_0_M_1_reg_745 : descramble_buf_1_M_1_reg_750);

assign p_neg1_fu_493_p2 = (18'd0 - tmp_17_tr_fu_490_p1);

assign p_neg2_fu_512_p2 = (18'd0 - tmp_22_tr_fu_509_p1);

assign p_neg_fu_451_p2 = (18'd0 - tmp_29_tr_fu_412_p1);

assign p_neg_t_fu_428_p2 = (16'd0 - tmp_18_reg_811);

assign p_y_M_imag_V_read_a_fu_472_p3 = ((ap_reg_pp0_iter5_tmp_25_reg_816[0:0] === 1'b1) ? tmp_23_fu_467_p2 : ap_reg_pp0_iter5_tmp_22_reg_821);

assign p_y_M_real_V_read_a_fu_443_p3 = ((tmp_24_fu_420_p3[0:0] === 1'b1) ? p_neg_t_fu_428_p2 : tmp_19_fu_433_p4);

assign r_V_1_fu_372_p2 = ($signed(tmp_12_fu_368_p1) + $signed(tmp_2_fu_349_p1));

assign r_V_2_fu_362_p2 = ($signed(tmp_5_fu_346_p1) - $signed(tmp_4_fu_352_p1));

assign r_V_fu_356_p2 = ($signed(tmp_4_fu_352_p1) + $signed(tmp_5_fu_346_p1));

assign t_V_2_fu_415_p2 = (17'd0 - p_Val2_5_reg_806);

assign tmp_10_fu_553_p4 = {{ap_reg_pp0_iter9_r_V_reg_787[16:1]}};

assign tmp_11_fu_528_p2 = (16'd0 - tmp_6_reg_885);

assign tmp_12_fu_368_p1 = $signed(p_Val2_2_fu_341_p3);

assign tmp_15_fu_576_p4 = {{ap_reg_pp0_iter9_r_V_1_reg_799[16:1]}};

assign tmp_16_fu_533_p2 = (16'd0 - tmp_14_reg_890);

assign tmp_17_fu_546_p3 = ap_reg_pp0_iter9_r_V_reg_787[32'd16];

assign tmp_17_tr_fu_490_p1 = ap_reg_pp0_iter7_r_V_reg_787;

assign tmp_19_fu_433_p4 = {{t_V_2_fu_415_p2[16:1]}};

assign tmp_1_fu_298_p4 = {{ap_reg_pp0_iter2_i1_0_i_reg_213[9:8]}};

assign tmp_1_i_fu_481_p1 = $signed(p_y_M_real_V_read_a_reg_836);

assign tmp_20_fu_569_p3 = ap_reg_pp0_iter9_r_V_1_reg_799[32'd16];

assign tmp_22_tr_fu_509_p1 = ap_reg_pp0_iter7_r_V_1_reg_799;

assign tmp_23_fu_467_p2 = (16'd0 - tmp_21_reg_841);

assign tmp_24_fu_420_p3 = t_V_2_fu_415_p2[32'd16];

assign tmp_29_tr_fu_412_p1 = r_V_2_reg_794;

assign tmp_2_fu_349_p1 = $signed(p_Val2_6_reg_770);

assign tmp_2_i_fu_484_p1 = p_Val2_15_reg_851;

assign tmp_3_i_fu_487_p1 = $signed(p_y_M_imag_V_read_a_reg_856);

assign tmp_4_fu_352_p1 = $signed(p_Val2_s_fu_336_p3);

assign tmp_5_fu_346_p1 = $signed(p_Val2_4_reg_765);

assign tmp_7_fu_330_p1 = ap_reg_pp0_iter3_i1_0_i_reg_213;

assign tmp_8_fu_255_p2 = ((ap_phi_mux_i1_0_i_phi_fu_217_p4 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_9_fu_267_p1 = tmp_s_fu_261_p2[7:0];

assign tmp_fu_286_p1 = ap_reg_pp0_iter1_i1_0_i_reg_213[7:0];

assign tmp_i_fu_478_p1 = p_Val2_14_reg_846;

assign tmp_s_fu_261_p2 = ($signed(10'd512) - $signed(ap_phi_mux_i1_0_i_phi_fu_217_p4));

assign twid_rom_0_address0 = tmp_7_fu_330_p1;

assign twid_rom_1_address0 = tmp_7_fu_330_p1;

endmodule //Loop_realfft_be_desc
